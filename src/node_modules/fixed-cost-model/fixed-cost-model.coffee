Decimal = require('big.js')

module.exports = ->
  class FixedCostModel
    constructor: (data = {}) ->
      @id = data.id
      @roundId = data.round_id
      @name = data.name
      @description = data.description

      Object.defineProperties @,
        amountCents:
          get: ->
            Number(@amount.times(100).toFixed(0))
          set: (amountCents) ->
            @amount = new Decimal(amountCents or 0).div(100)
        amountDollars:
          get: ->
            Number(@amount.toFixed(2))
          set: (amountDollars) ->
            @amount = new Decimal(amountDollars or 0)

      if typeof data.amount_dollars != 'undefined'
        @amountDollars = data.amount_dollars
      else
        @amountCents = data.amount_cents

    serialize: ->
      {
        id: @id
        round_id: @roundId
        name: @name
        description: @description
        amount_cents: @amountCents
      }

    save: (FixedCostStore) ->
      unsaved = @serialize()
      self = @
      FixedCostStore.save(unsaved).then (saved) ->
        if saved
          self.id = saved.id
