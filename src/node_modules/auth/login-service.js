/* @ngInject */
var loginModal = require('./login-modal')

module.exports = function ($scope, $modal, AuthService) {
  $scope.credentials = {
    email: '',
    password: '',
  };

  $scope.login = function (credentials) {
    AuthService.login(credentials);
  };

  $scope.forgotPassword = function () {
    $modal.open(
      require('./forgot-password-modal')()
    ).result
    .then(function (credentials) {
      return AuthService.forgotPassword(credentials);
    })
    .then(function (credentials) {
      console.log("reset success", credentials);
    })
    .then(null, function (err) {
      // handle error
      if (!err || err === "backdrop click") {
        return;
      } else {
        $modal.open(require('error-modal')({ error: err }))
      }
    });
    AuthService.forgotPassword(credentials);
  };

  $scope.ok = function() {}; // Stub out when we're not in modal

  $scope.open = function () {
    if (!$scope.modalInstance) {
      $scope.modalInstance = $modal.open(
        loginModal()
      )

      $scope.modalInstance.result.then(function () {
        $scope.modalInstance = null;
      }, function () {
        $scope.modalInstance = null;
      });
    }
  };

  $scope.close = function () {
    $scope.modalInstance.close();
  };
}
.service("LoginService", function ())
.directive('loginModal', function (AUTH_EVENTS) {
  return {
    restrict: 'A',
    controller: 'LoginModalCtrl',
    link: function(scope) {
      scope.$on(AUTH_EVENTS.notAuthenticated, scope.open);
      scope.$on(AUTH_EVENTS.sessionTimeout, scope.open);
    }
  };
})
.controller('LoginModalCtrl', function ($scope, $sce, $modal, AuthService) {
  // This should probably be stored in a login service instead?
  AuthService.loginModalCtrl = $scope;

  $scope.open = function () {
    if (!$scope.modalInstance) {
      $scope.modalInstance = $modal.open({
        template: require('./login_modal.html'),
        scope: $scope,
      });

      $scope.modalInstance.result.then(function () {
        $scope.modalInstance = null;
      }, function () {
        $scope.modalInstance = null;
      });
    }
  };

  $scope.close = function () {
    $scope.modalInstance.close();
  };
})
