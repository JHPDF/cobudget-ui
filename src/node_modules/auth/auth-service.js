recase = require('recase').create({})

/* @ngInject */
module.exports = function ($rootScope, $http, authCookie, AuthModel, AUTH_EVENTS, config) {

  var authService = {};
  var authModel = authService.model = new AuthModel();

  authService.login = function (authCredentials) {
    var credentials = recase.snakeCopy({
      user: authCredentials,
    });
    return $http
      .post(config.apiEndpoint + '/auth/log_in.json', credentials)
      .then(function (res) {
        var authData = recase.camelCopy(res.data.user);
        authModel.set(authData)
        authModel.emit('login-success')
        return authModel
      }, function(err) {
        authModel.emit('login-failed', err)
      });
  };

  authService.forgotPassword = function (email) {
    var credentials = recase.snakeCopy({
      user: {
        email: email,
      },
    });
    return $http
      .post(config.apiEndpoint + "/users/reset_password", credentials)
      .then(function (res) {
        var authData = recase.camelCopy(res.data.user)
        return res.data;
      });
  }

  authService.resetPassword = function (token)


  authService.logout = function () {
    $cookieStore.remove('user');
    $rootScope.$broadcast(AUTH_EVENTS.logoutSuccess);
  };

  return authService;
});
