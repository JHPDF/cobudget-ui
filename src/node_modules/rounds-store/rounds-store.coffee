_ = require('lodash')
recase = require('recase').create({})
debug = require('debug')("rounds-store")

# ridiculous hack for @ngInject due to code at top from coffee class extension
null
### @ngInject ###
module.exports = ($http, RestfulStore, RoundModel, ContributionModel, FixedCostModel) ->
  class RoundsStore extends RestfulStore

    # hack to add roundId to buckets before deserializing
    get: (model) ->
      if typeof model == "string" or typeof model == "number"
        model = id: model
      path = @path(model, "get")
      debug("get", path)
      self = @
      $http.get(path).then (response) ->
        debug("get res", response)
        data = response.data
        data.buckets = _.map data.buckets, (bucket) ->
          bucket.roundId =  data.id
        self.deserialize(data)
      , (err) ->
        debug("get error", err)
        throw err

    getContributorDetails: (roundId, userId) ->
      path = @path(id: roundId)
      self = @
      $http.get("#{path}/contributors/#{userId}").then (response) ->
        details = recase.camelCopy(response.data.contributor)
        ret = {
          allocationAmountCents: details.allocationAmountCents
          contributions: []
        }
        ret.totalContributionsCents = 0
        for contribution in details.contributions
          ret.contributions.push(new ContributionModel(contribution))
          ret.totalContributionsCents += contribution.amountCents
        ret.fundsLeftCents = ret.allocationAmountCents - ret.totalContributionsCents

        return ret

  new RoundsStore(
    singular: "round"
    plural: "rounds"
    Model: RoundModel
  )
