_ = require('lodash')
debug = require('debug')("group-members")

### @ngInject ###
module.exports = ($scope, $modal, AuthService, group, memberships, MembershipModel, MembershipsStore) ->

  $scope.isAdmin = group.isAdmin(AuthService.getCurrentUser())

  $scope.openAddMembersModal = ->
    $modal.open(
      require('./add-members-modal.coffee')(
        group: group
      )
    ).result.then (newMemberships) ->
      debug("new memberships", newMemberships)

      _.forEach newMemberships, (membership) ->
        index = _.sortedIndex memberships, membership, (m) -> m.user.name
        memberships.splice(index, 0, membership)

  $scope.toggleAdmin = (membership, index) ->
    # clone membership object
    mClone = new MembershipModel(membership.serialize())
    # toggle admin property
    mClone.isAdmin = !mClone.isAdmin
    # re-save
    MembershipsStore.save(mClone).then (mSaved) ->
      memberships.splice(index, 1, membership)
    , (err) ->
      # TODO handle error

  $scope.removeMember = (membership, index) ->
    MembershipsStore.remove(membership).then ->
      memberships.splice(index, 1)
