_ = require('lodash')
debug = require('debug')("group-members")

### @ngInject ###
module.exports = ($scope, $modal, AuthService, group, memberships, MembershipModel, MembershipsStore) ->

  $scope.isAdmin = group.isAdmin(AuthService.getCurrentUser())

  $scope.openAddMembersModal = ->
    $modal.open(
      require('./add-members-modal.coffee')(
        group: group
      )
    ).result.then (newMemberships) ->
      debug("new memberships", newMemberships)

      _.forEach newMemberships, (membership) ->
        index = _.sortedIndex memberships, membership, (m) -> m.member.name
        memberships.splice(index, 0, membership)
    , (err) ->
      if (err)
        # handle error
        $modal.open(
          require('error-modal')({ error: err })
        )

  $scope.toggleAdmin = (membership, index) ->
    # toggle admin property
    membership.isAdmin = !membership.isAdmin
    # re-save
    MembershipsStore.save(membership).then null
    , (err) ->
      # re-toggle
      membership.isAdmin = !membership.isAdmin
      # handle error
      $modal.open(
        require('error-modal')({ error: err })
      )

  $scope.removeMember = (membership, index) ->
    MembershipsStore.remove(membership).then ->
      memberships.splice(index, 1)
