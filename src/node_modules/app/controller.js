/* @ngInject */
module.exports = function ($scope, $state, $stateParams, AuthService, AUTH_EVENTS, $http) {
  $scope.currentUser = null;

  $scope.updateCurrentUser = function () {
    $scope.currentUser = AuthService.getCurrentUser();
    $scope.updateCurrentUserHeaders();
  };

  $scope.updateCurrentUserHeaders = function () {
    var token, email;
    if ($scope.currentUser) {
      token = $scope.currentUser.access_token;
      email = $scope.currentUser.email;
    }
    var defaultHeaders = {
      "Accept": "application/json",
      "X-User-Token": token,
      "X-User-Email": email,
    };
    $http.defaults.headers.common = defaultHeaders;
  };

  $scope.$on(AUTH_EVENTS.loginSuccess, function () {
    $scope.updateCurrentUser();
    if ($scope.currentUser.force_password_reset === true) {
      $state.go('layout.person.profile', { personId: $scope.currentUser.id });
    } else {
      // default to first group that user is a member of, not first group.
      var groupId = $stateParams.groupId || 1;
      $state.go('layout.group.rounds', { groupId: groupId });
    }
  });

  $scope.$on(AUTH_EVENTS.logoutSuccess, function () {
    $scope.updateCurrentUser();
  });

  $scope.updateCurrentUser();
};
