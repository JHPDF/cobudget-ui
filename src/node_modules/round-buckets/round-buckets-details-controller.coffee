_ = require('lodash')
debug = require('debug')("round-buckets:details:controller")

### @ngInject ###
module.exports = ($scope, $rootScope, $modal, $state, BucketsStore, AuthService, group, round, bucket) ->

  $rootScope.selectedBucketId = bucket.id

  setBucket = (bucket) ->
    roundBucket = _.find(
      round.buckets,
      (b) ->
        b.id == bucket.id
    )
    roundBucket.name = bucket.name
    roundBucket.description = bucket.description
    roundBucket.user = bucket.user
    roundBucket.target = bucket.target
    $scope.bucket = roundBucket

  removeBucket = (id) ->
    roundBucketIndex = _.findIndex(
      round.buckets,
      (b) -> b.id == id
    )
    round.buckets.splice(roundBucketIndex, 1)
  
  setBucket(bucket)

  currentUser = AuthService.getCurrentUser()
  $scope.canEdit = group.isAdmin(currentUser) or
    (
      round.status.name == 'pending' and
      round.membersCanProposeBuckets and
        $scope.bucket.user.id == currentUser.id
    )

  $scope.openEditBucketModal = ->
    $modal.open(
      require('bucket-modal')(
        round: round
        group: group
        bucket: $scope.bucket
      )
    ).result.then (bucket) ->
      setBucket(bucket)

  $scope.openRemoveBucketModal = ->
    $modal.open(
      require('yes-or-no-modal')(
        title: "Are you sure"
        body: "you want to remove bucket #{bucket.name}?"
      )
    ).result.then ->
      debug("removing", bucket)
      bucketId = bucket.id

      BucketsStore.remove(bucket).then ->
        removeBucket(bucketId)
        $state.go('^')
      , (err) ->
        # TODO handle error

