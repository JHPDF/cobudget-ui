var debug = require('debug')('login');

var loginModal = require('./login-modal');
var resetLoginModal = require('./reset-login-modal');
//var resetConfirmedModal = require('./reset-confirmed-modal');
//var loginResetModal = require('./login-reset-modal');

/* @ngInject */
module.exports = function ($modal, authModel, AuthService) {

  var login = {};

  login.authModal = null;

  login.openModal = function (modal, callback) {
    debug("opening modal", login.authModal)
    if (login.authModal) {
      login.authModal.dismiss();
    }

    login.authModal = $modal.open(modal);

    login.authModal.result.then(function (result) {
      callback(null, result);
    }, function (err) {
      callback(err);
    });
  };

  login.closeModal = function () {
    debug("closing modal");
    login.authModal.close()
  };

  var loginOpen = false;
  login.openLogin = function () {

    if (loginOpen) { return; }
    debug("opening login modal");
    loginOpen = true;

    login.openModal(
      loginModal()
    , function (err, result) {
      if (err) { return handleError(err); }

      loginOpen = false;
      login.authModal = null;
    })
  };

  login.openResetLogin = function () {
    debug("opening reset modal");
    login.openModal(
      resetLogin()
    , function (err, result) {
      if (err) { return handleError(err); }

      login.authModal = null;
    })
  };

  login.logout = AuthService.logout.bind(AuthService)

  authModel.on("not-authenticated", login.openLogin);
  authModel.on("session-timeout", login.openLogin);

  function handleError (err) {
    login.authModal = null;

    if (err !== "backdrop click") {
      // handle error
      $modal.open(
        require('error-modal')({ error: err })
      );
    }
  }

  return login;
};
/*
var loginModal = require('./login-modal')

module.exports = function ($scope, $modal, AuthService) {
  $scope.credentials = {
    email: '',
    password: '',
  };

  $scope.login = function (credentials) {
    AuthService.login(credentials);
  };

  $scope.forgotPassword = function () {
    $modal.open(
      require('./forgot-password-modal')()
    ).result
    .then(function (credentials) {
      return AuthService.forgotPassword(credentials);
    })
    .then(function (credentials) {
      console.log("reset success", credentials);
    })
    .then(null, function (err) {
      // handle error
      if (!err || err === "backdrop click") {
        return;
      } else {
        $modal.open(require('error-modal')({ error: err }))
      }
    });
    AuthService.forgotPassword(credentials);
  };

  $scope.ok = function() {}; // Stub out when we're not in modal

  $scope.open = function () {
    if (!$scope.modalInstance) {
      $scope.modalInstance = $modal.open(
        loginModal()
      )

      $scope.modalInstance.result.then(function () {
        $scope.modalInstance = null;
      }, function () {
        $scope.modalInstance = null;
      });
    }
  };

  $scope.close = function () {
    $scope.modalInstance.close();
}
.controller('LoginModalCtrl', function ($scope, $sce, $modal, AuthService) {
  // This should probably be stored in a login service instead?
  AuthService.loginModalCtrl = $scope;

  $scope.open = function () {
    if (!$scope.modalInstance) {
      $scope.modalInstance = $modal.open({
        template: require('./login_modal.html'),
        scope: $scope,
      });

      $scope.modalInstance.result.then(function () {
        $scope.modalInstance = null;
      }, function () {
        $scope.modalInstance = null;
      });
    }
  };

  $scope.close = function () {
    $scope.modalInstance.close();
  };
})
*/
